
CHANGELOG | FANCYMENU v3.0.0 CLOSED ALPHA 3
 
- Added experimental placeholder parsing cooldown (30ms) to improve performance (placeholders basically get cached and can only update every 30ms)
- Added experimental advanced position and size parsing cooldown (30ms) for elements to improve performance (they get cached and can only update every 30ms)
- FancyMenu now supports APNG textures (Animated PNGs, like GIFs, but better)
- Most GIF images now load way smoother and don't freeze the screen anymore
- Most elements and backgrounds that support web images also support web GIFs now
- The Progress Bar element now accepts GIF images as bar and background textures
- The Markdown renderer now supports GIF images
- The Image background type now supports local and web GIF images
- Text element grabber textures now support GIF images
- The File Explorer screens (Choose and Save File) now display previews for GIF images
- Improved customizability of modern screens like the "Create World" or "Credits and Attribution" screen
- You can now fully customize Vanilla/Mod Slider handle and background textures
- Added back the "Close Editor" entry to the "Layout" tab of the Layout Editor's menu bar
- Reworked Slider element (old Slider now deprecated)
- Completely reworked FM's resource handling
--> Almost all elements that accept some kind of resource (image, audio, video, text) now accept Web, Local and Minecraft Resource (resource location) sources
--> Reloading FancyMenu now correctly releases all types of resources and loads them again
- Text elements are now locked at a maximum of 45,000 characters, because the game isn't really usable anymore when using longer texts
- The placeholder parser is now locked at a maximum of 17,000 characters per text that can be checked for placeholders
--> So if you use placeholders in text elements, this overrides the normal 45,000 characters maximum
- Improved performance of the placeholder parser
- Improved performance of the Markdown parser
- Most context menus in the menu bar (normal overlay and layout editor) now stay open after doing stuff that opens new screens or reloads the screen (like deleting layouts)
- It is now possible to disable Markdown parsing for text elements
- There's now a button in the Manage Custom GUI screen to open the selected Custom GUI
- Markdown headlines now add some space between them and the next line (to get more in line with default Markdown behaviour)
- An empty line after a Markdown headline now gets ignored (to get more in line with default Markdown behaviour)
- Progress bar elements now have a smoother progress animation
- Universal layouts now get always loaded BEFORE normal ones, so normal layouts can override parts of universal ones
- The grid in the layout editor now always gets rendered at the same scale, no matter what GUI scale is used
- The 8 most recently edited layouts (normal and universal combined) now get showed in the root "Layouts" context menu in the "Customization" tab (shortcut to Layouts -> Manage -> Normal / Universal)
- ANIMATIONS can now be seen as DEPRECATED!
--> There are still places where you can only use animations, but that will change soon, since FM has APNG support now and maybe even full video support in the future
- Elements now have a dragging "crumple zone", so you don't acidentally move your elements anymore (you're welcome!)
- New elements now get added in the top-left corner when added via the "Layout -> Properties" menu (not right-click menu)
- Newly added elements are now selected by default
 
- Added: "Update Screen" action to update/reload the current screen's customizations without reloading the whole mod
- Added: "Set Minecraft Option" action to set the value of a Minecraft option
- Added: "Minecraft Option Value" placeholder to get the value of a Minecraft option
- Added: "Mod Loader Version" placeholder to get the mod loader version (Fabric, Forge, etc.)
- Added: "Mod Loader Name" placeholder to get the mod loader name (Fabric, Forge, etc.)
- Added: "Screen Identifier" placeholder to get the identifier of the active screen
 
- Fixed: Tab and arrow key navigation broken in menu screens
- Fixed: Unable to focus custom buttons via tab/arrow key navigation
- Fixed: Unable to focus custom input fields via tab/arrow key navigation
- Fixed: Resizing and moving Vanilla widgets is broken
- Fixed: Vanilla widgets in some screens stay customized after disabling customizations/layouts
- Fixed: Positions of Vanilla elements sometimes broken when more than one layout is enabled
- Fixed: Layer widget in editor not correctly updating when moving elements up/down via their right-click menus and when pasting an element