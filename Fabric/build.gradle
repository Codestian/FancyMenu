plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-fabric"

dependencies {

    minecraft "com.mojang:minecraft:${minecraft_version}"

    mappings loom.officialMojangMappings()

    include(implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-fabric:0.2.0-beta.6")))

    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'

    implementation project(":Common")

    implementation fileTree('libs') { include '*.jar' }

}

loom {
    mixin {
        defaultRefmapName = "${mod_id}.mixin-refmap.json"
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run_server")
        }
    }
    accessWidenerPath = file("src/main/resources/fancymenu.accessWidener")
}


processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
