
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'

archivesBaseName = "${mod_id}-forge"

minecraft {

    mappings channel: 'official', version: minecraft_version
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('../run_client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'konkrete'
//            arg "-mixin.config=${mod_id}.mixin.json"
//            arg "-mixin.config=${mod_id}.forge.mixin.json"
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('../run_server')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Server'
//            property 'mixin.env.remapRefMap', 'true'
//            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'konkrete'
//            arg "-mixin.config=${mod_id}.mixin.json"
//            arg "-mixin.config=${mod_id}.forge.mixin.json"
            mods {
                modServerRun {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }
    }

}

sourceSets.main.resources.srcDir 'src/generated/resources'

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly project(":Common")

    implementation fileTree('libs') { include '*.jar' }

//    implementation fg.deobf("curse.maven:essential-mod-546670:3918566")

    implementation(annotationProcessor("com.github.llamalad7.mixinextras:mixinextras-common:0.2.0-beta.6"))
    implementation(jarJar("com.github.llamalad7.mixinextras:mixinextras-forge:0.2.0-beta.6")) {
        jarJar.ranged(it, "[0.2.0-beta.6,)")
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    testAnnotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

mixin {
    add sourceSets.main, "${mod_id}.mixin-refmap.json"
    config "${mod_id}.mixin.json"
    config "${mod_id}.forge.mixin.json"
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
