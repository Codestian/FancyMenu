plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'fabric-loom'
}
base {
    archivesName = "${mod_id}"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")
    modImplementation "curse.maven:load-my-resources-fabric-534835:4583334"
    modImplementation "maven.modrinth:modmenu:7.2.2"
    implementation fileTree('libs') { include '*.jar' }
    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.3.2")))
    include(implementation 'com.github.Keksuccino:japng:0.5.3')
    modImplementation "maven.modrinth:melody:1.0.4-1.20.1-1.20.4-fabric"
//    modImplementation "maven.modrinth:yacl:3.2.1+1.20-fabric"
//    modImplementation "maven.modrinth:chat-heads:68f3pu0P"
//    modImplementation "maven.modrinth:midnightlib:1.4.1-fabric"
    modImplementation "curse.maven:modernfix-790626:5077297"
//    modImplementation "maven.modrinth:ukulib:0.7.0+1.20"
    modImplementation "maven.modrinth:sodium:mc1.20.1-0.5.8"
    modImplementation "maven.modrinth:lithium:mc1.20.1-0.11.2"
//    modImplementation "maven.modrinth:ferrite-core:unerR5MN"
//    modImplementation "maven.modrinth:iris:1.6.17+1.20.1"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run_client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run_server")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
tasks.withType(Javadoc).configureEach {
    source(project(":common").sourceSets.main.allJava)
}
tasks.named("sourcesJar", Jar) {
    from(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}
